https://cs.nyu.edu/courses/spring22/CSCI-UA.0467-001/_site/slides/js/js-node-npm-debug-git.html#/41
(go over this code and what it is doing.)

- need to go over context and scope within JavaScript.


-CommonJS allows the inclusion and execution of JavaScript in other files by using: →
export or module.exports in a module to specify what functions, classes, or objects are allowed to be included
the require function to bring in exported objects…



***************** Go over why the moduleP.js and main.js files cannot find moduel. ****************************************** 



Your JavaScript modules contains two "built-in" variables:

__filename: absolute path to the module file, including file name
__dirname: the absolute path to the directory containing the file
Note that:

if used in the "main" file, then it's the path to the main file
if used in a module, both are the path to that module, even if the module is included!

--------------------------------------------------------------------------------------------------------------------
Higher Order Functions as Constructs for Abstractions
A higher order function is a function that does at least one of the following:

takes a function or functions as a parameter (input)
returns a function


foreach - calls a function for every element in an array (no return value)
map - calls a function on every element in an array to return a new array composed of those elements
filter - creates and returns a new array composed of only elements that pass a supplied test function
reduce - reduces an array to a single value, and returns that value



------------------ Go over in more detail ---------------------------------
Bind Example
Fixing the first parameter, called base, of our function.

const areaTriangleBase100 = areaTriangle.bind(null, 100);

// call with only one argument now
console.log(areaTriangleBase100(3));

Note that you'll also see bind used to fix/set a function or method's this.




------------------------ GO OVER THIS --------------------------------------
Decorators
A function that accepts another function as a parameter, 
wraps its call in another function, and returns that wrapper as a new function… is called a function decorator.
Why might function decorators be a useful? When would it make sense to implement 
a decorator rather than to modify an actual function? →




We just saw a bunch of higher order functions in JavaScript… and we even created our own.

-Array Methods
forEach
map
filter
reduce

-Function Methods
call
apply
bind